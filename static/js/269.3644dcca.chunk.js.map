{"version":3,"file":"static/js/269.3644dcca.chunk.js","mappings":"oOAKe,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAgDF,EAAAA,EAAAA,WAAS,GAAzD,eAAOG,EAAP,KAAyBC,EAAzB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAiBH,GACdI,MAAK,SAAAC,GACJR,EAAWQ,EAAKC,SACZD,EAAKC,QAAQC,OAAS,GACxBR,GAAoB,MAGvBS,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,CAACT,KAGF,0BACE,wBACGF,EACCF,EAAQgB,KAAI,SAAAC,GAAM,OAChB,2BACE,oCAAYA,EAAOC,WACnB,qCAAaD,EAAOE,aAFbF,EAAOC,YAMlB,0E,mLCjCJE,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQC,MAAM,yDAAD,OACyCF,IACzDZ,MAAK,SAAAe,GACL,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAMF,EAAIG,YAEtB,OAAOH,EAAII,UAPR,0GAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,iFACQP,MAAM,qDAAD,OACqCF,EADrC,kBACkDS,IAClErB,MAAK,SAAAe,GACL,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAMF,EAAIG,YAEtB,OAAOH,EAAII,UAPR,0GAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8B1B,GAA9B,iFACQkB,MAAM,sCAAD,OACsBlB,EADtB,oBACyCgB,IACzDZ,MAAK,SAAAe,GACL,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAMF,EAAIG,YAEtB,OAAOH,EAAII,UAPR,0GAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAyB3B,GAAzB,iFACQkB,MAAM,sCAAD,OACsBlB,EADtB,4BACiDgB,EADjD,YAEhBZ,MAAK,SAAAe,GACL,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAMF,EAAIG,YAEtB,OAAOH,EAAII,UAPR,0GAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4B5B,GAA5B,iFACQkB,MAAM,sCAAD,OACsBlB,EADtB,4BACiDgB,EADjD,YAEhBZ,MAAK,SAAAe,GACL,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAMF,EAAIG,YAEtB,OAAOH,EAAII,UAPR","sources":["pages/MovieDetails/Reviews/Reviews.jsx","utils/fetchThemoviedb.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from 'utils/fetchThemoviedb';\n// import { StyledList, StyledListItem, StyledIMG } from './Cast.styled';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState(null);\n  const [isReviewsLoading, setIsReviewsLoading] = useState(false);\n\n  const { movieID } = useParams();\n\n  useEffect(() => {\n    API.fetchReviews(movieID)\n      .then(data => {\n        setReviews(data.results);\n        if (data.results.length > 0) {\n          setIsReviewsLoading(true);\n        }\n      })\n      .catch(err => console.log(err));\n  }, [movieID]);\n\n  return (\n    <div>\n      <ul>\n        {isReviewsLoading ? (\n          reviews.map(review => (\n            <li key={review.author}>\n              <p>Author: {review.author}</p>\n              <p>Content: {review.content}</p>\n            </li>\n          ))\n        ) : (\n          <p>We don't have any reviews for this movie</p>\n        )}\n      </ul>\n    </div>\n  );\n}\n","const KEY = '834c76b3089fde7a8eb63b29983db356';\n\nexport async function fetchDayPopularMovies() {\n  return await fetch(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n\nexport async function fetchMoviesByQuery(query) {\n  return await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n\nexport async function fetchMovieByID(movieID) {\n  return await fetch(\n    `https://api.themoviedb.org/3/movie/${movieID}?api_key=${KEY}`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n\nexport async function fetchCast(movieID) {\n  return await fetch(\n    `https://api.themoviedb.org/3/movie/${movieID}/credits?api_key=${KEY}&page=1`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n\nexport async function fetchReviews(movieID) {\n  return await fetch(\n    `https://api.themoviedb.org/3/movie/${movieID}/reviews?api_key=${KEY}&page=1`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n"],"names":["Reviews","useState","reviews","setReviews","isReviewsLoading","setIsReviewsLoading","movieID","useParams","useEffect","API","then","data","results","length","catch","err","console","log","map","review","author","content","KEY","fetchDayPopularMovies","fetch","res","ok","Error","statusText","json","fetchMoviesByQuery","query","fetchMovieByID","fetchCast","fetchReviews"],"sourceRoot":""}