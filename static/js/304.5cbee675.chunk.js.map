{"version":3,"file":"static/js/304.5cbee675.chunk.js","mappings":"uPAGaA,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,yE,SCEX,SAASE,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KACGC,MAAK,SAAAC,GAAI,OAAIN,EAAUM,EAAKC,YAC5BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,KAGD,4BACE,2CACA,wBACGV,EAAOa,KAAI,SAAAC,GAAK,OACf,2BACE,SAACnB,EAAD,CACEoB,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMhB,GAFjB,SAIGY,EAAMK,OAASL,EAAMM,gBACP,MANVN,EAAME,c,mLCpBnBK,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQC,MAAM,yDAAD,OACyCF,IACzDf,MAAK,SAAAkB,GACL,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAMF,EAAIG,YAEtB,OAAOH,EAAII,UAPR,0GAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,iFACQP,MAAM,qDAAD,OACqCF,EADrC,kBACkDS,IAClExB,MAAK,SAAAkB,GACL,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAMF,EAAIG,YAEtB,OAAOH,EAAII,UAPR,0GAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,iFACQT,MAAM,sCAAD,OACsBS,EADtB,oBACyCX,IACzDf,MAAK,SAAAkB,GACL,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAMF,EAAIG,YAEtB,OAAOH,EAAII,UAPR,0GAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBD,GAAzB,iFACQT,MAAM,sCAAD,OACsBS,EADtB,4BACiDX,EADjD,YAEhBf,MAAK,SAAAkB,GACL,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAMF,EAAIG,YAEtB,OAAOH,EAAII,UAPR,0GAWA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,iFACQT,MAAM,sCAAD,OACsBS,EADtB,4BACiDX,EADjD,YAEhBf,MAAK,SAAAkB,GACL,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAMF,EAAIG,YAEtB,OAAOH,EAAII,UAPR","sources":["pages/Home/Home.styled.js","pages/Home/Home.jsx","utils/fetchThemoviedb.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledNavLink = styled(NavLink)`\n  &:visited,\n  &:link {\n    color: blue;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport * as API from 'utils/fetchThemoviedb';\nimport { StyledNavLink } from './Home.styled';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    API.fetchDayPopularMovies()\n      .then(data => setMovies(data.results))\n      .catch(err => console.log(err));\n  }, []);\n\n  return (\n    <div>\n      <h3>Trening today</h3>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <StyledNavLink\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n            >\n              {movie.title || movie.original_name}\n            </StyledNavLink>{' '}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","const KEY = '834c76b3089fde7a8eb63b29983db356';\n\nexport async function fetchDayPopularMovies() {\n  return await fetch(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n\nexport async function fetchMoviesByQuery(query) {\n  return await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n\nexport async function fetchMovieByID(movieID) {\n  return await fetch(\n    `https://api.themoviedb.org/3/movie/${movieID}?api_key=${KEY}`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n\nexport async function fetchCast(movieID) {\n  return await fetch(\n    `https://api.themoviedb.org/3/movie/${movieID}/credits?api_key=${KEY}&page=1`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n\nexport async function fetchReviews(movieID) {\n  return await fetch(\n    `https://api.themoviedb.org/3/movie/${movieID}/reviews?api_key=${KEY}&page=1`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n"],"names":["StyledNavLink","styled","NavLink","Home","useState","movies","setMovies","location","useLocation","useEffect","API","then","data","results","catch","err","console","log","map","movie","to","id","state","from","title","original_name","KEY","fetchDayPopularMovies","fetch","res","ok","Error","statusText","json","fetchMoviesByQuery","query","fetchMovieByID","movieID","fetchCast","fetchReviews"],"sourceRoot":""}