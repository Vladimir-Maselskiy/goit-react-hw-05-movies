{"version":3,"file":"static/js/310.4268a075.chunk.js","mappings":"yPAGaA,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,yEAObE,EAAaF,EAAAA,GAAAA,KAAH,yC,SCJR,SAASG,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAuBC,EAAAA,EAAAA,MACjBC,GADN,eAC2BC,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACJF,GACFG,EAAAA,GAAuBH,GACpBI,MAAK,SAAAC,GAAI,OAAIX,EAAUW,EAAKC,YAC5BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAE7B,CAACR,EAAOH,IASX,OACE,4BACE,UAACP,EAAD,CAAYqB,SATC,SAAAC,GACfA,EAAEC,iBACF,IAAMb,EAAQY,EAAEE,OAAOd,MAAMe,MAC7BlB,EAAS,UAAD,OAAWG,IACnBY,EAAEE,OAAOE,SAKP,WACE,kBAAOC,KAAK,WACZ,mBAAQC,KAAK,SAAb,wBAEF,wBACGlB,GACCP,EAAO0B,KAAI,SAAAC,GAAK,OACd,2BACE,SAACjC,EAAD,CACEkC,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAM7B,GAFjB,SAIGyB,EAAMK,OAASL,EAAMM,gBACP,MANVN,EAAME,c,mLCrCrBK,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQC,MAAM,yDAAD,OACyCF,IACzDvB,MAAK,SAAA0B,GACL,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAMF,EAAIG,YAEtB,OAAOH,EAAII,UAPR,0GAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCnC,GAAlC,iFACQ6B,MAAM,qDAAD,OACqCF,EADrC,kBACkD3B,IAClEI,MAAK,SAAA0B,GACL,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAMF,EAAIG,YAEtB,OAAOH,EAAII,UAPR,0GAWA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,iFACQR,MAAM,sCAAD,OACsBQ,EADtB,oBACyCV,IACzDvB,MAAK,SAAA0B,GACL,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAMF,EAAIG,YAEtB,OAAOH,EAAII,UAPR,0GAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAyBD,GAAzB,iFACQR,MAAM,sCAAD,OACsBQ,EADtB,4BACiDV,EADjD,YAEhBvB,MAAK,SAAA0B,GACL,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAMF,EAAIG,YAEtB,OAAOH,EAAII,UAPR,0GAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BF,GAA5B,iFACQR,MAAM,sCAAD,OACsBQ,EADtB,4BACiDV,EADjD,YAEhBvB,MAAK,SAAA0B,GACL,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAMF,EAAIG,YAEtB,OAAOH,EAAII,UAPR","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","utils/fetchThemoviedb.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledNavLink = styled(NavLink)`\n  &:visited,\n  &:link {\n    color: blue;\n  }\n`;\n\nexport const StyledForm = styled.form`\n  margin: 10px;\n`;\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\nimport * as API from 'utils/fetchThemoviedb';\nimport { StyledNavLink, StyledForm } from './Movies.styled';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query) {\n      API.fetchMoviesByQuery(query)\n        .then(data => setMovies(data.results))\n        .catch(err => console.log(err));\n    }\n  }, [query, navigate]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const query = e.target.query.value;\n    navigate(`?query=${query}`);\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <StyledForm onSubmit={onSubmit}>\n        <input name=\"query\" />\n        <button type=\"submit\">Search</button>\n      </StyledForm>\n      <ul>\n        {query &&\n          movies.map(movie => (\n            <li key={movie.id}>\n              <StyledNavLink\n                to={`/movies/${movie.id}`}\n                state={{ from: location }}\n              >\n                {movie.title || movie.original_name}\n              </StyledNavLink>{' '}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n","const KEY = '834c76b3089fde7a8eb63b29983db356';\n\nexport async function fetchDayPopularMovies() {\n  return await fetch(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n\nexport async function fetchMoviesByQuery(query) {\n  return await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n\nexport async function fetchMovieByID(movieID) {\n  return await fetch(\n    `https://api.themoviedb.org/3/movie/${movieID}?api_key=${KEY}`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n\nexport async function fetchCast(movieID) {\n  return await fetch(\n    `https://api.themoviedb.org/3/movie/${movieID}/credits?api_key=${KEY}&page=1`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n\nexport async function fetchReviews(movieID) {\n  return await fetch(\n    `https://api.themoviedb.org/3/movie/${movieID}/reviews?api_key=${KEY}&page=1`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n"],"names":["StyledNavLink","styled","NavLink","StyledForm","Movies","useState","movies","setMovies","location","useLocation","navigate","useNavigate","useSearchParams","query","get","useEffect","API","then","data","results","catch","err","console","log","onSubmit","e","preventDefault","target","value","reset","name","type","map","movie","to","id","state","from","title","original_name","KEY","fetchDayPopularMovies","fetch","res","ok","Error","statusText","json","fetchMoviesByQuery","fetchMovieByID","movieID","fetchCast","fetchReviews"],"sourceRoot":""}