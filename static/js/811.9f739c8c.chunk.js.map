{"version":3,"file":"static/js/811.9f739c8c.chunk.js","mappings":"kPAEaA,EAAaC,EAAAA,GAAAA,GAAH,0CAGVC,EAAiBD,EAAAA,GAAAA,GAAH,uGAMdE,EAAYF,EAAAA,GAAAA,IAAH,4E,SCNP,SAASG,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAcH,GACXI,MAAK,SAAAC,GACJN,EAAQM,EAAKP,KAAKQ,MAAM,EAAG,OAE5BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,CAACR,KAGF,0BACE,SAACR,EAAD,UACGM,GACCA,EAAKa,KAAI,SAAAb,GAAI,OACX,UAACJ,EAAD,YACE,SAACC,EAAD,CACEiB,IAAG,0CAAqCd,EAAKe,cAC7CC,IAAKhB,EAAKiB,QAEZ,uBAAIjB,EAAKiB,QACT,uCAAejB,EAAKkB,eANDlB,EAAKmB,a,mLCvBhCC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACQC,MAAM,yDAAD,OACyCF,IACzDd,MAAK,SAAAiB,GACL,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAMF,EAAIG,YAEtB,OAAOH,EAAII,UAPR,0GAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,iFACQP,MAAM,qDAAD,OACqCF,EADrC,kBACkDS,IAClEvB,MAAK,SAAAiB,GACL,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAMF,EAAIG,YAEtB,OAAOH,EAAII,UAPR,0GAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8B5B,GAA9B,iFACQoB,MAAM,sCAAD,OACsBpB,EADtB,oBACyCkB,IACzDd,MAAK,SAAAiB,GACL,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAMF,EAAIG,YAEtB,OAAOH,EAAII,UAPR,0GAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAyB7B,GAAzB,iFACQoB,MAAM,sCAAD,OACsBpB,EADtB,4BACiDkB,EADjD,YAEhBd,MAAK,SAAAiB,GACL,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAMF,EAAIG,YAEtB,OAAOH,EAAII,UAPR,0GAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4B9B,GAA5B,iFACQoB,MAAM,sCAAD,OACsBpB,EADtB,4BACiDkB,EADjD,YAEhBd,MAAK,SAAAiB,GACL,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAMF,EAAIG,YAEtB,OAAOH,EAAII,UAPR","sources":["pages/MovieDetails/Cast/Cast.styled.js","pages/MovieDetails/Cast/Cast.jsx","utils/fetchThemoviedb.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  display: flex;\n`;\nexport const StyledListItem = styled.li`\n  display: block;\n  width: 150px;\n  margin: 5px;\n  border: 2px solid #ccc;\n`;\nexport const StyledIMG = styled.img`\n  width: 100%;\n  height: auto;\n  display: block;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from 'utils/fetchThemoviedb';\nimport { StyledList, StyledListItem, StyledIMG } from './Cast.styled';\n\nexport default function Cast() {\n  const [cast, setCast] = useState(null);\n\n  const { movieID } = useParams();\n\n  useEffect(() => {\n    API.fetchCast(movieID)\n      .then(data => {\n        setCast(data.cast.slice(0, 5));\n      })\n      .catch(err => console.log(err));\n  }, [movieID]);\n\n  return (\n    <div>\n      <StyledList>\n        {cast &&\n          cast.map(cast => (\n            <StyledListItem key={cast.id}>\n              <StyledIMG\n                src={`https://image.tmdb.org/t/p/w500/${cast.profile_path}`}\n                alt={cast.name}\n              />\n              <p>{cast.name}</p>\n              <p>Character: {cast.character}</p>\n            </StyledListItem>\n          ))}\n      </StyledList>\n    </div>\n  );\n}\n","const KEY = '834c76b3089fde7a8eb63b29983db356';\n\nexport async function fetchDayPopularMovies() {\n  return await fetch(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n\nexport async function fetchMoviesByQuery(query) {\n  return await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n\nexport async function fetchMovieByID(movieID) {\n  return await fetch(\n    `https://api.themoviedb.org/3/movie/${movieID}?api_key=${KEY}`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n\nexport async function fetchCast(movieID) {\n  return await fetch(\n    `https://api.themoviedb.org/3/movie/${movieID}/credits?api_key=${KEY}&page=1`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n\nexport async function fetchReviews(movieID) {\n  return await fetch(\n    `https://api.themoviedb.org/3/movie/${movieID}/reviews?api_key=${KEY}&page=1`\n  ).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  });\n}\n"],"names":["StyledList","styled","StyledListItem","StyledIMG","Cast","useState","cast","setCast","movieID","useParams","useEffect","API","then","data","slice","catch","err","console","log","map","src","profile_path","alt","name","character","id","KEY","fetchDayPopularMovies","fetch","res","ok","Error","statusText","json","fetchMoviesByQuery","query","fetchMovieByID","fetchCast","fetchReviews"],"sourceRoot":""}